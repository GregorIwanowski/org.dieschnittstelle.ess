---
paths:
  /api/metrics/{registry}:
    options:
      parameters:
      - name: "registry"
        in: "path"
        schema:
          type: "string"
        style: "simple"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
      operationId: "getMetadata_1"
    get:
      parameters:
      - name: "registry"
        in: "path"
        schema:
          type: "string"
        style: "simple"
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: "string"
          description: "default response"
        default:
          content:
            text/plain:
              schema:
                type: "string"
          description: "default response"
      operationId: "getText"
  /api/metrics:
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
      operationId: "getJson_1"
  /api/metrics/{registry}/{metric}:
    options:
      parameters:
      - name: "registry"
        in: "path"
        schema:
          type: "string"
        style: "simple"
        required: true
      - name: "metric"
        in: "path"
        schema:
          type: "string"
        style: "simple"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
      operationId: "getMetadata"
    get:
      parameters:
      - name: "registry"
        in: "path"
        schema:
          type: "string"
        style: "simple"
        required: true
      - name: "metric"
        in: "path"
        schema:
          type: "string"
        style: "simple"
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: "string"
          description: "default response"
        default:
          content:
            text/plain:
              schema:
                type: "string"
          description: "default response"
      operationId: "getText_1_2"
  /api/health:
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: "object"
                nullable: true
          description: "default response"
        default:
          content:
            application/json:
              schema:
                properties: {}
                type: "object"
                nullable: true
          description: "default response"
      operationId: "getChecks"
  /api/async/touchpoints: {}
  /api/async/touchpoints/{id}: {}
  /api/opi/touchpoints:
    post:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/StationaryTouchpoint"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/StationaryTouchpoint"
          description: "default response"
      operationId: "createTouchpoint"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              $ref: "#/components/schemas/StationaryTouchpoint"
        required: true
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  $ref: "#/components/schemas/StationaryTouchpoint"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  $ref: "#/components/schemas/StationaryTouchpoint"
          description: "default response"
      operationId: "readAllTouchpoints"
  /api/opi/touchpoints/{id}:
    delete:
      parameters:
      - name: "id"
        in: "path"
        schema:
          type: "integer"
        style: "simple"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "boolean"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "boolean"
          description: "default response"
      operationId: "deleteTouchpoint"
    get:
      parameters:
      - name: "id"
        in: "path"
        schema:
          type: "integer"
        style: "simple"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/StationaryTouchpoint"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/StationaryTouchpoint"
          description: "default response"
      operationId: "readTouchpoint"
  /api/opi/products:
    post:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
          description: "default response"
      operationId: "createProduct"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              $ref: "#/components/schemas/IndividualisedProductItem"
        required: true
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  $ref: "#/components/schemas/IndividualisedProductItem"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  $ref: "#/components/schemas/IndividualisedProductItem"
          description: "default response"
      operationId: "readAllProducts"
  /api/opi/products/{productId}:
    put:
      parameters:
      - name: "productId"
        in: "path"
        schema:
          type: "integer"
        style: "simple"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
          description: "default response"
      operationId: "updateProduct"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              $ref: "#/components/schemas/IndividualisedProductItem"
        required: true
    delete:
      parameters:
      - name: "productId"
        in: "path"
        schema:
          type: "integer"
        style: "simple"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "boolean"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "boolean"
          description: "default response"
      operationId: "deleteProduct"
    get:
      parameters:
      - name: "productId"
        in: "path"
        schema:
          type: "integer"
        style: "simple"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
          description: "default response"
      operationId: "readProduct"
components:
  schemas:
    java_lang_Object:
      properties: {}
      type: "object"
    StationaryTouchpoint:
      properties:
        address:
          type: "object"
          $ref: "#/components/schemas/Address"
        erpPointOfSaleId:
          type: "integer"
        name:
          type: "string"
        id:
          type: "integer"
        customers:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_Customer"
        transactions:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_CustomerTransaction"
      type: "object"
    Address:
      properties:
        zipCode:
          type: "string"
        city:
          type: "string"
        street:
          type: "string"
        geoLong:
          type: "integer"
        geoLat:
          type: "integer"
        id:
          type: "integer"
        houseNr:
          type: "string"
      type: "object"
    org_dieschnittstelle_ess_entities_crm_CustomerTransaction:
      properties:
        date:
          type: "string"
          nullable: true
        id:
          type: "integer"
        completed:
          type: "boolean"
        value:
          type: "integer"
        touchpoint:
          type: "object"
          $ref: "#/components/schemas/AbstractTouchpoint"
        items:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_ShoppingCartItem"
        customer:
          type: "object"
          $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_Customer"
      type: "object"
    AbstractTouchpoint:
      properties:
        erpPointOfSaleId:
          type: "integer"
        name:
          type: "string"
        id:
          type: "integer"
        customers:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_Customer"
        transactions:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_CustomerTransaction"
      type: "object"
    org_dieschnittstelle_ess_entities_crm_Customer:
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        address:
          type: "object"
          $ref: "#/components/schemas/Address"
        gender:
          type: "string"
          nullable: true
          enum:
          - "M"
          - "W"
        touchpoints:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/AbstractTouchpoint"
        id:
          type: "integer"
        mobilePhoneId:
          type: "string"
        transactions:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_CustomerTransaction"
        preferredTouchpoint:
          type: "object"
          $ref: "#/components/schemas/AbstractTouchpoint"
        email:
          type: "string"
      type: "object"
    org_dieschnittstelle_ess_entities_crm_ShoppingCartItem:
      properties:
        productObj:
          type: "object"
          $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_erp_AbstractProduct"
        erpProductId:
          type: "integer"
        campaign:
          type: "boolean"
        id:
          type: "integer"
        units:
          type: "integer"
      type: "object"
    org_dieschnittstelle_ess_entities_erp_AbstractProduct:
      properties:
        price:
          type: "integer"
        name:
          type: "string"
        id:
          type: "integer"
      type: "object"
    Campaign:
      properties:
        price:
          type: "integer"
        bundles:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/ProductBundle"
        name:
          type: "string"
        id:
          type: "integer"
      type: "object"
    ProductBundle:
      properties:
        product:
          type: "object"
          $ref: "#/components/schemas/IndividualisedProductItem"
        id:
          type: "integer"
        units:
          type: "integer"
      type: "object"
    IndividualisedProductItem:
      properties:
        price:
          type: "integer"
        name:
          type: "string"
        expirationAfterStocked:
          type: "integer"
        id:
          type: "integer"
        productType:
          type: "string"
          nullable: true
          enum:
          - "BREAD"
          - "ROLL"
          - "PASTRY"
      type: "object"
info:
  version: "0.1"
  description: ""
  license:
    name: ""
    url: ""
  contact:
    name: ""
    url: ""
    email: ""
  termsOfService: ""
  title: "WebAPI for JRS, OPI and WSV exercises"
openapi: "3.0.1"
